LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY top IS
	PORT(
		clk,key1,key2,key3,key4,key5: IN STD_LOGIC;
		seg7data:	OUT STD_LOGIC_VECTOR(7 downto 0);
		seg7com: OUT STD_LOGIC_VECTOR(3 downto 0)
		);
END top;

ARCHITECTURE example OF top IS
	
	COMPONENT test1 IS----------------------分频器1，5 hz-----------
		PORT (
		clk_in:IN STD_LOGIC;
	  clk_out:OUT STD_LOGIC;
	  led_out:OUT STD_LOGIC_VECTOR(3 DOWNTO 0));
	END COMPONENT test1;
	
	COMPONENT test2 IS----------------------分频器2：500 hz----------------
		PORT (
			clk_in2 :IN STD_LOGIC;
			clk_out2 :OUT STD_LOGIC
		);
	END COMPONENT test2;
		
	COMPONENT jishu1 IS-------------------------计数器模块---------------
		PORT(
			clkjishu: IN STD_LOGIC;
			ens:       IN STD_LOGIC;
			light_state: IN INTEGER RANGE 2 DOWNTO 0;
			light:    OUT INTEGER RANGE 50 DOWNTO 0;
			num:      OUT INTEGER RANGE 60 DOWNTO 0
		);
	END COMPONENT jishu1;
		
	
	COMPONENT xianshi IS-------------------显示模块------------------------
		PORT (
			clk1: IN STD_LOGIC;
			num: IN INTEGER RANGE 90 DOWNTO 0; 
			light: IN INTEGER RANGE 50 DOWNTO 0;
			ledcom: OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
			leddata:OUT STD_LOGIC_VECTOR(7 DOWNTO 0)
		);
	END COMPONENT xianshi;
	
	COMPONENT anjian IS 
		PORT (
			clkaj,keyin:IN STD_LOGIC;
			keyout: OUT  STD_LOGIC
		);
	END COMPONENT anjian;
	
	SIGNAL keysignal :STD_LOGIC_VECTOR(7 DOWNTO 0);
	SIGNAL codesignal :STD_LOGIC_VECTOR(3 DOWNTO 0);
	SIGNAL clk_jishu:STD_LOGIC;
	SIGNAL key_out:STD_LOGIC:='1';
	SIGNAL clk_saomiao:STD_LOGIC;
	SIGNAL data1:STD_LOGIC_VECTOR(3 downto 0);
	SIGNAL data2:STD_LOGIC_VECTOR(3 downto 0);
	SIGNAL count1 :INTEGER RANGE 0 TO 100000:=0;    --按键所需持续时间；
	SIGNAL count2 :INTEGER RANGE 0 TO 100000:=0;    --按键所需持续时间；
	SIGNAL pre_state:INTEGER RANGE 2 DOWNTO 0:=0;---------------0:车绿人红  1:车红人绿  2：车黄人红；-----------------
	SIGNAL next_state:INTEGER RANGE 2 DOWNTO 0:=0;
	SIGNAL lightstate:INTEGER RANGE 2 DOWNTO 0:=0;
	SIGNAL lightdata :INTEGER RANGE 50 DOWNTO 0;
	SIGNAL sec  :INTEGER RANGE 60 DOWNTO 0;
	SIGNAL flag :STD_LOGIC;
	SIGNAL push,set,up,down:STD_LOGIC;
BEGIN
	push <= key1;
	set  <= key2;
	
	HELLO: test1 PORT MAP(
			clk_in => clk,
			clk_out => clk_jishu,
			led_out => codesignal
			);
			
	HELLo2: test2 PORT MAP(
		clk_in2 => clk,
		clk_out2 => clk_saomiao
	);
	
	u1: jishu1 PORT MAP(
		clkjishu    => clk_jishu,
		ens         => key_out,
		light_state => lightstate,
		light       => lightdata,
		num         => sec
	); 
			
	dis: xianshi PORT MAP (
			clk1    => clk_saomiao,
			num     => sec, 
			light   => lightdata,
			ledcom  => seg7com,
			leddata => seg7data
			);
			
	anj:anjian PORT MAP (
			clkaj   =>clk,
			keyin   =>key1,
			keyout  =>key_out
	);
---------------------------------以下是按键消抖---------------------
---PROCESS(clk_saomiao,push) 
---BEGIN 
--IF(rising_edge(clk_saomiao)) THEN
--	IF(push='0') then
--		if(count1=30) then
--			count1<=count1;
--		else
--			count1 <= count1+1;
--		end if;
		
--		if(count1>25) then 
--			flag <= '0';
--		else
--			flag <= '1';
--		end if;
--	else
--		count1 <= 0;
--  end if;
			
		
--END IF;
--END PROCESS;

--PROCESS(clk)
--BEGIN
--	if(clk'event and clk='1')then
--		if(flag='0')then
--			key_out<='0';
--		else
--			key_out<='1';
--		end if;
--	end if;
--END PROCESS;

----------------------------以下是状态机------------------------
PROCESS(pre_state,key_out,	sec)

BEGIN	
	case pre_state is
		when 0=> lightstate <=0;--------------车绿人红-----------
			if(key_out='0' and sec=0)then
				next_state<=2;
			else
				next_state<=0;
			end if;
		
		when 1=> lightstate<=1;-------------车红人绿--------------
			if(sec=0)then
				next_state<=0;
			else
				next_state<=1;
			end if;
			
		when 2=> lightstate<=2;-------------车黄人红-------------
			if(sec=0)then
				next_state<=1;
			else
				next_state<=2;
			end if;
	end case;
END PROCESS;

PROCESS(clk)
BEGIN
	if(clk'event and clk='1')then
		pre_state<=next_state;
	end if;
END PROCESS;
END example;